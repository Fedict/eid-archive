#!/bin/bash

set -e

# This script does almost, but not quite, the same thing as preinst. The
# differences are:
#
# - preinst errors out when an unsupported situation is encountered,
#   postinst does not
# - postinst writes the file in /etc/apt/sources.list, preinst does not.
#
# This is because if postinst errors out, the failed package brings the
# whole system in a failed state that is extremely difficult to recover
# from. However, preinst can't use dependencies that are not in the
# Essential set, such as ucf, which we use to write the config file. So
# we can only do that in postinst...
#
# Please do not forget to update *both* scripts!

DIR=$(mktemp -d)

. /etc/os-release

too_old() {
	echo "distribution too old, cannot continue. Please upgrade, or compile from source."
	exit 0
}

# NOTE NOTE NOTE: See the comment above and do not forget to also update preinst
case "$VERSION_CODENAME" in
	vera|victoria|virginia)
		VERSION_CODENAME=vanessa
	;;
	xia)
		VERSION_CODENAME=wilma
	;;
	bullseye|bookworm|jammy|vanessa|noble|wilma|oracular)
		:
	;;
	*)
		echo -e "WARNING: Unsupported distribution found. Please see the website at\nhttps://eid.belgium.be/en/faq/which-linux-distributions-are-supported#7406\nfor a list of supported distributions."
		case "$ID" in
			linuxmint)
				if dpkg --compare-versions 21 le $VERSION_ID
				then
					VERSION_CODENAME=vanessa
				else
					too_old
				fi
				echo "Found Linux Mint $VERSION, using $VERSION_CODENAME"
			;;
			ubuntu)
				if dpkg --compare-versions 22.04 le $VERSION_ID
				then
					VERSION_CODENAME=jammy
				else
					too_old
				fi
				echo "Found Ubuntu $VERSION, using $VERSION_CODENAME"
			;;
			debian)
                                # On testing and unstable, $VERSION_ID is empty
				if [ -z "$VERSION_ID" ]; then
                                        VERSION=testing/unstable
					VERSION_CODENAME=bookworm
                                else
                                        if dpkg --compare-versions 11 le $VERSION_ID
                                        then
                                                VERSION_CODENAME=bullseye
                                        else
                                                too_old
                                        fi
				fi
				echo "Found Debian $VERSION, using $VERSION_CODENAME"
			;;
			*)
				VERSION_CODENAME=bullseye
				echo "Unknown distribution found. Using $VERSION_CODENAME as fallback."
			;;
		esac
	;;
esac
sed -e "s/@DIST@/${VERSION_CODENAME}/g" /usr/share/eid-archive/eid.list > $DIR/eid.list
ucf $DIR/eid.list /etc/apt/sources.list.d/eid.list

ln -sf /usr/share/eid-archive/keys/6773d225.gpg /etc/apt/trusted.gpg.d/eid-archive-released-builds.gpg
if grep -E '^[[:space:]]*deb.*(continuous|candidate)' /etc/apt/sources.list.d/eid.list >/dev/null 2>&1
then
	ln -sf /usr/share/eid-archive/keys/10a04d46.gpg /etc/apt/trusted.gpg.d/eid-archive-test-builds.gpg
else
	rm -f /etc/apt/trusted.gpg.d/eid-archive-test-builds.gpg
fi

if [ -x /usr/sbin/update-software-center ]; then
	update-software-center --triggered=TRIGGERED
fi

echo -e "Repository enabled, keys installed. Please run \"apt-get update\" followed by\n\"apt-get install eid-mw eid-viewer\" to install the middleware and the viewer, respectively."

#DEBHELPER#
